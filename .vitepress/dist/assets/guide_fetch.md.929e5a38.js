import{_ as p,C as o,c as l,k as s,a,H as e,Q as t,o as c}from"./chunks/framework.06fa6207.js";const v=JSON.parse('{"title":"自带JS工具库","description":"","frontmatter":{"title":"自带JS工具库"},"headers":[],"relativePath":"guide/fetch.md","filePath":"guide/fetch.md","lastUpdated":1696843868000}'),r={name:"guide/fetch.md"},y=s("h4",{id:"jstool-tmui-design",tabindex:"-1"},[a("JSTool tmui.design "),s("a",{class:"header-anchor",href:"#jstool-tmui-design","aria-label":'Permalink to "JSTool tmui.design"'},"​")],-1),E={id:"js工具库",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#js工具库","aria-label":'Permalink to "JS工具库  <Badge type="danger" text="v3.0.5+" vertical="middle" />"'},"​",-1),d=t(`<h2 id="如何调用" tabindex="-1">🎉 如何调用 <a class="header-anchor" href="#如何调用" aria-label="Permalink to &quot;:tada: 如何调用&quot;">​</a></h2><p>在全局任意位置均可调用，部分方法需要你导入相关包（主要是为了包大小考虑）<br><em><strong>为什么在uni中是$tm而在上下文中使用tm。因为$tm在上下文里被系统使用了</strong></em></p><p>在vue或者nvue页面中调用</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ts&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {getCurrentInstance} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;vue&quot;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">proxy</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getCurrentInstance</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//可以在任意js中调用</span></span>
<span class="line"><span style="color:#E1E4E8;">uni.$tm.fetch.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(url) </span><span style="color:#6A737D;">//访问网络请求</span></span>
<span class="line"><span style="color:#6A737D;">//只在本上下文件中可以用如下：</span></span>
<span class="line"><span style="color:#E1E4E8;">proxy.tm.fetch.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(url)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ts&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {getCurrentInstance} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;vue&quot;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">proxy</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getCurrentInstance</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//可以在任意js中调用</span></span>
<span class="line"><span style="color:#24292E;">uni.$tm.fetch.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(url) </span><span style="color:#6A737D;">//访问网络请求</span></span>
<span class="line"><span style="color:#6A737D;">//只在本上下文件中可以用如下：</span></span>
<span class="line"><span style="color:#24292E;">proxy.tm.fetch.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(url)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="参数说明" tabindex="-1">🎉 参数说明 <a class="header-anchor" href="#参数说明" aria-label="Permalink to &quot;:tada: 参数说明&quot;">​</a></h2><p>请求返回的数据类型：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fetchConfigResponseType</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;arraybuffer&quot;</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fetchConfigResponseType</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;arraybuffer&quot;</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>请求的数据类型fetchConfigDataType：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fetchConfigDataType</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;json&quot;</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fetchConfigDataType</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;json&quot;</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>合法请求类型fetchConfigMethod如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fetchConfigMethod</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;GET&quot;</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">&quot;POST&quot;</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">&quot;PUT&quot;</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">&quot;DELETE&quot;</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">&quot;CONNECT&quot;</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">&quot;HEAD&quot;</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">&quot;OPTIONS&quot;</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">&quot;TRACE&quot;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fetchConfigMethod</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;GET&quot;</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">&quot;POST&quot;</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">&quot;PUT&quot;</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">&quot;DELETE&quot;</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">&quot;CONNECT&quot;</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">&quot;HEAD&quot;</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">&quot;OPTIONS&quot;</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">&quot;TRACE&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>请求中的fetchConfig类型如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fetchConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">url</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">data</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">object</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">string</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">ArrayBuffer</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">/** 定义成功的服务器返回的状态码成功的标志 */</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">statusCode</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">header</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">method</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;">fetchConfigMethod</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">timeout</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">dataType</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;">fetchConfigDataType</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">responseType</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;">fetchConfigResponseType</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">sslVerify</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">withCredentials</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">firstIpv4</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">success</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;">Function</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">fail</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;">Function</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">complete</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;">Function</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fetchConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">url</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">data</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">object</span><span style="color:#D73A49;">|</span><span style="color:#005CC5;">string</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">ArrayBuffer</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">/** 定义成功的服务器返回的状态码成功的标志 */</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">statusCode</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">number</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">header</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">object</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">method</span><span style="color:#D73A49;">?:</span><span style="color:#6F42C1;">fetchConfigMethod</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">timeout</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">number</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">dataType</span><span style="color:#D73A49;">?:</span><span style="color:#6F42C1;">fetchConfigDataType</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">responseType</span><span style="color:#D73A49;">?:</span><span style="color:#6F42C1;">fetchConfigResponseType</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">sslVerify</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">withCredentials</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">firstIpv4</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">success</span><span style="color:#D73A49;">?:</span><span style="color:#6F42C1;">Function</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">fail</span><span style="color:#D73A49;">?:</span><span style="color:#6F42C1;">Function</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">complete</span><span style="color:#D73A49;">?:</span><span style="color:#6F42C1;">Function</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>请求成功后,success(result),其中result结构：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fetchConfigSuccessType</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">data</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">object</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">string</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">ArrayBuffer</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">statusCode</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">header</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">cookies</span><span style="color:#F97583;">:</span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fetchConfigSuccessType</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">data</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">object</span><span style="color:#D73A49;">|</span><span style="color:#005CC5;">string</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">ArrayBuffer</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">statusCode</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">number</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">header</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">object</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">cookies</span><span style="color:#D73A49;">:</span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="get请求" tabindex="-1">🎉 GET请求 <a class="header-anchor" href="#get请求" aria-label="Permalink to &quot;:tada: GET请求&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">uni.$tm.fetch.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(url:string,data:object</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{},opts:fetchConfig</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">uni.$tm.fetch.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(url:string,data:object</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{},opts:fetchConfig</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{})</span></span></code></pre></div><h2 id="post请求" tabindex="-1">🎉 POST请求 <a class="header-anchor" href="#post请求" aria-label="Permalink to &quot;:tada: POST请求&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">uni.$tm.fetch.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(url:string,data:object</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{},opts:fetchConfig</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">uni.$tm.fetch.</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(url:string,data:object</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{},opts:fetchConfig</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{})</span></span></code></pre></div><h2 id="自定义请求" tabindex="-1">🎉 自定义请求 <a class="header-anchor" href="#自定义请求" aria-label="Permalink to &quot;:tada: 自定义请求&quot;">​</a></h2><p><code>request</code>为自定义访问请求。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">uni.$tm.fetch.</span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">(cog:fetchConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> config,beforeFun</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;">Function,afterFun</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;">Function,complete</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;">Function)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">uni.$tm.fetch.</span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">(cog:fetchConfig </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> config,beforeFun</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;">Function,afterFun</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;">Function,complete</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;">Function)</span></span></code></pre></div><p>其中beforeFun：访问请求前执行的勾子函数。可以是<code>Promise&lt;fetchConfig&gt;</code>，请一定要返回一个请求配置，可以直接返回 {},也可以返回false，将阻止请求。这里的作用，主要是用来 请求前的一些参数配置。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">beforeFun</span><span style="color:#E1E4E8;">(cog:fetchConfig)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">beforeFun</span><span style="color:#24292E;">(cog:fetchConfig)</span></span></code></pre></div><p>afterFun:请求链接成功statusCode==200,的情况下。立即执行的勾子函数。可以是<code>Promise&lt;fetchConfigSuccessType&gt;</code>,可以直接返回 {}。这里的作用，主要是用来 对返回的结果数据进行修改。如果不修改请直接返回{}。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">afterFun</span><span style="color:#E1E4E8;">(result:fetchConfigSuccessType)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">afterFun</span><span style="color:#24292E;">(result:fetchConfigSuccessType)</span></span></code></pre></div><p>complete：请求完成后执行。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">complete</span><span style="color:#E1E4E8;">(result:fetchConfigSuccessType)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">complete</span><span style="color:#24292E;">(result:fetchConfigSuccessType)</span></span></code></pre></div>`,28);function F(u,h,g,C,f,b){const n=o("Badge");return c(),l("div",null,[y,s("h1",E,[a("JS工具库 "),e(n,{type:"danger",text:"v3.0.5+",vertical:"middle"}),a(),i]),d])}const B=p(r,[["render",F]]);export{v as __pageData,B as default};
