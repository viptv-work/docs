import{_ as o,c as t,o as a,V as e}from"./chunks/framework.nhQNVgJI.js";const g=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/read.md","filePath":"guide/read.md","lastUpdated":1709955357000}'),r={name:"guide/read.md"},s=e('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><h2 id="cookbook-vs-指南" tabindex="-1">Cookbook vs 指南 <a class="header-anchor" href="#cookbook-vs-指南" aria-label="Permalink to &quot;Cookbook vs 指南&quot;">​</a></h2><p>这份 cookbook 和指南的不同之处在哪里？存在的意义是什么？</p><ul><li><p><strong>更专注</strong>：在指南里，我们实际上是在讲一个故事。每个章节都以之前章节的知识进行构建和假设。而在 cookbook 里，每个案例都有各自的代表性。也就是说每个案例都专注于 Vue 的某个特定方面，而不是一个概览。</p></li><li><p><strong>更有深度</strong>：为了避免指南写得太长，我们试着只包含了尽可能简单的示例来帮助你理解每个功能，然后就直奔下一个话题了。在 cookbook 里，我们以更生动的形式包含了更复杂的示例并结合多个特性。每个案例都可以尽可能的翔实，以彻底探索这个领域。</p></li><li><p><strong>传授 JavaScript</strong>：在指南里，我们假设你至少具有 ES5 JavaScript 的中级水平。例如，我们不会解释 <code>Array.prototype.filter</code> 在计算属性中是如何过滤一个列表的。然而在 cookbook 里，我们将对一些必要的 JavaScript 特性 (包括 ES6/2015+) 进行探索和解释，以帮助我们构建更好的 Vue 应用。</p></li><li><p><strong>探索生态系统</strong>：对于高级特性，我们会假设你已经对生态体系有一定了解。例如，如果你想在 webpack 中使用单文件组件，我们不会解释如何在 webpack 中配置 Vue 以外的部分。在 cookbook 里，我们有空间去深度探索这些生态系统中的库——至少能到对 Vue 开发者普遍使用的程度。</p></li></ul><h1 id="收集精华教程-分享爬坑指南。" tabindex="-1">收集精华教程，分享爬坑指南。 <a class="header-anchor" href="#收集精华教程-分享爬坑指南。" aria-label="Permalink to &quot;收集精华教程，分享爬坑指南。&quot;">​</a></h1><p><strong>在学习和运用VUE2.6,VUE3.0及THINKPHP过程中的实用操作指南</strong></p><div class="danger custom-block"><p class="custom-block-title">GitHub 镜像访问</p><ul><li><strong><a href="https://github.com.cnpmjs.org" target="_blank" rel="noreferrer">https://github.com.cnpmjs.org</a></strong></li><li><strong><a href="https://hub.fastgit.org" target="_blank" rel="noreferrer">https://hub.fastgit.org</a></strong></li></ul></div><div class="danger custom-block"><p class="custom-block-title">VUE</p><p><strong>中文文档教程 : <a href="https://cn.vuejs.org" target="_blank" rel="noreferrer">https://cn.vuejs.org</a></strong></p></div><div class="danger custom-block"><p class="custom-block-title">Composer</p><p>PHP 类库管理之composer:本次课程主要是学习一下PHP规范推荐的相关知识点，也就是我们常说的PSR代码规范，从而掌握更加规范的编码方式。学习完这个后，我们还将学习一个PHP类库管理工具-composer，使用composer下载的这些类库工具都满足PSR规范。</p></div><div class="tip custom-block"><p class="custom-block-title">ThinkPHP</p><p>ThinkPHP6.0基于精简核心和统一用法两大原则在5.1的基础上对底层架构做了进一步的优化改进，并更加规范化。由于引入了一些新特性，ThinkPHP6.0运行环境要求PHP7.1+，不支持5.1的无缝升级（官方给出了升级指导用于项目的升级参考）。 <a href="https://www.kancloud.cn/manual/thinkphp6_0/1037479" target="_blank" rel="noreferrer">ThinkPHP6.0完全开发手册</a></p></div><div class="warning custom-block"><p class="custom-block-title">ES6模块</p><p>ES6 提供了更接近传统语言的写法，引入了 Class（类）这个概念，作为对象的模板。通过class关键字，可以定义类。</p></div>',11),c=[s];function l(i,n,p,d,k,h){return a(),t("div",null,c)}const b=o(r,[["render",l]]);export{g as __pageData,b as default};
